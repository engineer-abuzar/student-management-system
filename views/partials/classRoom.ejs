<% if(locals.addmissionStatus){ %>
    <div class="subjects-container" id="classroom-container">
        <fieldset>
            <legend>ðŸ“š <strong>Classroom</strong></legend>
         
    <input type="text" value="<% locals.semester %> " id="semester">
            <div class="subject">
                <h3 id="3">Compiler Design</h3>
                <strong>Code:</strong><p id="course-code">CS115</p>
                <p><strong>Instructor:</strong> Dr. Mehta</p>
                <p class="grade"><strong>Grade:</strong> A-</p>
            </div>
           
        </fieldset>
    </div>
  
    

    <script>
        const semester=document.getElementById('semester').value
        window.onload = function() {
            fetch(`/api/user/getSubjects?semester=${semester}`)
                .then(response => response.json())
                .then(subjects => {
                    console.log(subjects);
                })
                .catch(error => {
                    console.log(error);
                });
        };
    </script>
    

    <style>

.resource-card {
    background: white;
    border-radius: 10px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
    padding: 16px;
    margin-bottom: 16px;
    display: flex;
    align-items: center;
    gap: 16px;
    transition: all 0.3s ease;
    border: 1px solid #eaeaea;
}

.resource-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
    border-color: #d4d4d4;
}

.file-icon {
    flex-shrink: 0;
    width: 48px;
    height: 48px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: #f5f3ff;
    border-radius: 8px;
}

.file-icon svg {
    width: 24px;
    height: 24px;
}

.file-details {
    flex-grow: 1;
    min-width: 0;
}

.file-name {
    margin: 0;
    font-size: 16px;
    font-weight: 600;
    color: #333;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.file-meta {
    display: flex;
    gap: 12px;
    margin-top: 4px;
    font-size: 13px;
    color: #666;
}

.file-actions {
    display: flex;
    gap: 8px;
    flex-shrink: 0;
}

.file-actions button {
    display: inline-flex;
    align-items: center;
    gap: 6px;
    padding: 8px 12px;
    border-radius: 6px;
    font-size: 14px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
    border: none;
}

.view-btn {
    background: #f0f7ff;
    color: #1a73e8;
}

.view-btn:hover {
    background: #e1f0ff;
}

.download-btn {
    background: #f6f6f6;
    color: #333;
}

.download-btn:hover {
    background: #e9e9e9;
}

/* Optional: Add these if you want the buttons to have icons */
.file-actions button svg {
    width: 14px;
    height: 14px;
    stroke-width: 2.5px;
}
        /* Container Styling */
        .subjects-container {
    
         
           
            padding: 20px;
            background: #ffffff;
            box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.2);
            border-radius: 12px;
            flex-grow: 1;
            overflow: auto;
            display: flex;
    
            justify-content: center;
        }
    
        /* Fieldset Styling */
        fieldset {
            border: 2px solid #5e46b4;
        border-radius: 12px;
        padding: 20px;
        background: #f9f9ff;
        width: 80%;
        display: flex;
        flex-direction: column;
        margin: auto;
        }
    
        /* Legend Styling */
        legend {
            font-size: 1.4rem;
            font-weight: bold;
            color: #5e46b4;
            padding: 5px 15px;
            background: #e6e1ff;
            border-radius: 8px;
            text-align: center;
        }
    
        /* Subject Card Styling */
        .subject {
            border: 2px solid #5e46b4;
            border-radius: 12px;
            padding: 15px;
            background: #f4f4f4;
            transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
            margin-bottom: 20px;
            cursor: pointer;
        }
    
        /* Hover Effect */
        .subject:hover {
            transform: scale(1.02);
            box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.2);
        }
    
        /* Title Styling */
        h3 {
            margin: 0;
            color: #5e46b4;
            font-size: 1.2rem;
        }
    
        /* Paragraph Styling */
        p {
            margin: 5px 0;
            font-size: 1rem;
        }
    
        /* Grade Highlight */
        .grade {
            font-weight: bold;
            color: #d9534f;
        }
    </style>
    
    <style>
    

        .tabs-container {
            display: flex;
            justify-content: center;
            gap: 20px;
            background: white;
            padding: 15px;
            border-radius: 10px;
            box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.2);
            max-width: 800px;
            margin: auto;
        }

        .tab {
            padding: 10px 20px;
            cursor: pointer;
            font-size: 16px;
            font-weight: bold;
            color: #666;
            border-bottom: 3px solid transparent;
            transition: 0.3s;
        }

        .tab.active {
            color: #5e46b4;
            border-bottom: 3px solid #5e46b4;
        }

        .content-container {
          
            padding: 20px;
            background: white;
            border-radius: 10px;
            box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.2);
            max-width: 800px;
            margin: auto;
            margin-top: 20px;
        }
    </style> 
    
    
    <script>
        let courseCode;
function downloadPdf(filename, base64Data) {
  const link = document.createElement('a');
  link.href = `data:application/pdf;base64,${base64Data}`;
  link.download = filename;
  link.click();
}
function viewPdf(filename, base64Data){
    const pdfWindow = window.open('', '_blank');
  pdfWindow.document.write(`
    <html>
      <head>
        <title>${filename}</title>
        <style>
          body { margin: 0; }
          iframe { width: 100%; height: 100vh; border: none; }
        </style>
      </head>
      <body>
        <iframe src="data:application/pdf;base64,${base64Data}"></iframe>
      </body>
    </html>
      `);
}
    const subjects = document.querySelectorAll('.subject');
    
    subjects.forEach(subject => {
        const subjectTitle = subject.querySelector('h3'); 
        subject.addEventListener('click', () => {
         
             courseCode=document.getElementById('course-code').innerText
        
            const subjectDetails=document.getElementById('classroom-container')
            fetch(`/api/user/getResourse?courseCode=${courseCode}`)
            .then(response=>response.json())
            .then((resources)=>{
                console.log(resources.data)
                let resourceHTML;
    resources.data.forEach(resource => {
        resourceHTML += `
        <div class="resource-card">
            <div class="resource-info">
                <h3>${resource.fileName}</h3>
                <button onclick="viewPdf('${resource.fileName}', '${resource.resourceFile}')">View PDF</button>
                <button onclick="downloadPdf('${resource.fileName}', '${resource.resourceFile}')">Download</button>
            </div>
        </div>`;
    });
                subjectDetails.innerHTML=`
        <style>
        
    
            .tabs-container {
                display: flex;
                justify-content: center;
                gap: 20px;
                background: white;
                padding: 15px;
                border-radius: 10px;
                box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.2);
                max-width: 800px;
                margin: auto;
            }
    
            .tab {
                padding: 10px 20px;
                cursor: pointer;
                font-size: 16px;
                font-weight: bold;
                color: #666;
                border-bottom: 3px solid transparent;
                transition: 0.3s;
            }
    
            .tab.active {
                color: #5e46b4;
                border-bottom: 3px solid #5e46b4;
            }
    
            .content-container {
              
                padding: 20px;
                background: white;
                border-radius: 10px;
                box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.2);
                max-width: 800px;
                margin: auto;
                margin-top: 20px;
            }
        </style>
    
    <div class="classroom-container" style="width: 100%; margin-top: 20px;">
        
        <div class="tabs-container">
            <div class="tab active" onclick="changeTab('courseWork', this)">Course Work</div>
            <div class="tab" onclick="changeTab('resources', this)">Resources</div>
            <div class="tab" onclick="changeTab('quizzes', this)">Quizzes</div>
            <div class="tab" onclick="changeTab('assignments', this)">Assignments</div>
            <div class="tab" onclick="changeTab('assessmentResults', this)">Assessment Results</div>
        </div>
    
        <div class="content-container" id="content">
            <h2>Course Work</h2>
     
       ${resourceHTML} 
        </div>
    
       
    
    
    </div>`
    
    
            }).catch((error)=>{
                console.log(error)
            })
        
        });
       
    });
    
    let globalHTML;
        function changeTab(tabName, element) {
            if(tabName==='courseWork'){
           
        
        const subjectDetails=document.getElementById('classroom-container')
        fetch(`/api/user/getResourse?courseCode=${courseCode}`)
        .then(response=>response.json())
        .then((resources)=>{
            console.log(resources.data)
            let resourceHTML;
resources.data.forEach(resource => {
    resourceHTML += `
    <div class="resource-card">
        <div class="resource-info">
            <h3>${resource.fileName}</h3>
            <button onclick="viewPdf('${resource.fileName}', '${resource.resourceFile}')">View PDF</button>
            <button onclick="downloadPdf('${resource.fileName}', '${resource.resourceFile}')">Download</button>
        </div>
    </div>`;
});
            subjectDetails.innerHTML=`
   
<div class="classroom-container" style="width: 100%; margin-top: 20px;">
    
    <div class="tabs-container">
        <div class="tab active" onclick="changeTab('courseWork', this)">Course Work</div>
        <div class="tab" onclick="changeTab('resources', this)">Resources</div>
        <div class="tab" onclick="changeTab('quizzes', this)">Quizzes</div>
        <div class="tab" onclick="changeTab('assignments', this)">Assignments</div>
        <div class="tab" onclick="changeTab('assessmentResults', this)">Assessment Results</div>
    </div>

    <div class="content-container" id="content">
        <h2>Course Work</h2>
 
   ${resourceHTML} 
    </div>

   


</div>`

globalHTML=subjectDetails.innerHTML
        }).catch((error)=>{
            console.log(error)
        })
            }
           
           
           
            else if(tabName==='resources'){
                const subjectDetails=document.getElementById('classroom-container')
        fetch(`/api/user/getResourse?courseCode=${courseCode}`)
        .then(response=>response.json())
        .then((resources)=>{
            console.log(resources.data)
            let resourceHTML;
resources.data.forEach(resource => {
    resourceHTML += `
    <div class="resource-card">
        <div class="resource-info">
            <h3>${resource.fileName}</h3>
            <button onclick="viewPdf('${resource.fileName}', '${resource.resourceFile}')">View PDF</button>
            <button onclick="downloadPdf('${resource.fileName}', '${resource.resourceFile}')">Download</button>
        </div>
    </div>`;
});
            subjectDetails.innerHTML=`
 

<div class="classroom-container" style="width: 100%; margin-top: 20px;">
    
    <div class="tabs-container">
        <div class="tab " onclick="changeTab('courseWork', this)">Course Work</div>
        <div class="tab active" onclick="changeTab('resources', this)">Resources</div>
        <div class="tab" onclick="changeTab('quizzes', this)">Quizzes</div>
        <div class="tab" onclick="changeTab('assignments', this)">Assignments</div>
        <div class="tab" onclick="changeTab('assessmentResults', this)">Assessment Results</div>
    </div>

    <div class="content-container" id="content">
        <h2>Course Work</h2>
 
   ${resourceHTML} 
    </div>

   


</div>`

globalHTML=subjectDetails.innerHTML
tabName
        }).catch((error)=>{
            console.log(error)
        })
            }
            // Tab content mapping
            const tabContent = {
                courseWork: `${globalHTML}`,
                resources: `${globalHTML}`,
                quizzes: "<h2>Quizzes</h2><p>Upcoming quizzes and past quiz results.</p>",
                assignments: "<h2>Assignments</h2><p>Current assignments, deadlines, and submissions.</p>",
                assessmentResults: "<h2>Assessment Results</h2><p>View your grades and performance reports.</p>"
            };
    
            // Update content
            document.getElementById("content").innerHTML = tabContent[tabName];
    
            // Update active tab styling
            document.querySelectorAll(".tab").forEach(tab => tab.classList.remove("active"));
            element.classList.add("active");
        }
    </script>
    
    
 

















    <% }else{ %>
        <style>
            .notice {
                width: 80%;
                margin: 20px auto;
                padding: 15px;
                background-color: #f8d7da;
                color: #721c24;
                border: 1px solid #f5c6cb;
                border-radius: 5px;
                text-align: center;
                font-family: Arial, sans-serif;
            }
        </style>
  <div class="notice">
    <strong>Notice:</strong> This service will be available for you after admission confirmation.
</div>
        <% } %>